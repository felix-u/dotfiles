#!/usr/bin/env sh
set -e

scriptdir="$(dirname "$0")"
pkgdir="$scriptdir"/packages
servicedir="$scriptdir"/services
optdir="$scriptdir"/options
rundir="$scriptdir"/run

[ "$(id -u)" -ne 0 ] && echo "error: run as root" && return 1

[ -z "$1" ] && echo "error: specify which configuration to build" && return 1

conf="$1"

{
    [ ! -d "$pkgdir" ] && echo "error: no directory '$pkgdir'" 
    [ ! -f "$pkgdir"/common ] && echo "error: no file '$pkgdir/common'" 
    [ ! -f "$pkgdir"/"$conf" ] && echo "error: no file '$pkgdir/$conf'" 
    [ ! -d "$servicedir" ] && echo "error: no directory '$servicedir'" 
    [ ! -f "$servicedir"/common ] && echo "error: no file '$servicedir/common'" 
    [ ! -f "$servicedir"/"$conf" ] && echo "error: no file '$servicedir/$conf'" 
    [ ! -d "$optdir" ] && echo "error: no directory '$optdir'" 
    [ ! -f "$optdir"/common ] && echo "error: no file '$optdir/common'" 
    [ ! -f "$optdir"/"$conf" ] && echo "error: no file '$optdir/$conf'" 
    [ ! -d "$rundir" ] && echo "error: no directory '$rundir'" 
    [ ! -f "$rundir"/common ] && echo "error: no file '$rundir/common'" 
    [ ! -f "$rundir"/"$conf" ] && echo "error: no file '$rundir/$conf'" 
} && return 1

of () {
    grep -v "^#" "$1" | grep -v "^$" | sort
}

touch /etc/apk/world
mv /etc/apk/world /etc/apk/world.last

of "$pkgdir"/common >> /etc/apk/world
of "$pkgdir"/"$conf" >> /etc/apk/world
chmod -w /etc/apk/world

apk fix --upgrade

set +e
diff -U 0 /etc/apk/world.last /etc/apk/world
set -e

service_fix () {
    of "$1" | while IFS= read -r line; do
        runlevel="$(echo "$line" | cut -d ':' -f 1)"
        action="$(echo "$line" | cut -d ':' -f 2)"
        service="$(echo "$line" | cut -d ':' -f 3)"
        rc-update "$action" "$service" "$runlevel"
    done
}

set +e
service_fix "$servicedir/common"
service_fix "$servicedir"/"$conf"
set -e

put_opt () {
    grep -qx "^[[:space:]]*$1[[:space:]]*\$" "$2" && return
    echo "$1" >> "$2"
}

set_opt () {
    tmpfile="$(mktemp)"
    cat "$3" | sed "s/^[[:space:]]*\($1\).*\$/\1$2/" > "$tmpfile"
    mv "$tmpfile" "$3"
}

sed_opt () {
    grep -qx "$1" "$3" && return 0
    tmpfile="$(mktemp)"
    sed "$2" "$3" > "$tmpfile"
    cmp -s "$3" "$tmpfile"
    exit_status="$?"
    mv "$tmpfile" "$3"
    return "$exit_status"
}

option_fix () {
    of "$1" | while IFS= read -r line; do
        file="$(echo "$line" | cut -d ':' -f 1)"
        action="$(echo "$line" | cut -d ':' -f 2)"

        if [ "$action" = "put" ]; then
            s1="$(echo "$line" | cut -d ':' -f 3)"
            put_opt "$s1" "$file"
        elif [ "$action" = "set" ]; then
            s1="$(echo "$line" | cut -d ':' -f 3)"
            s2="$(echo "$line" | cut -d ':' -f 4)"
            set_opt "$s1" "$s2" "$file"
        elif [ "$action" = "sed" ]; then
            togrep="$(echo "$line" | awk -F '  ' '{print $2}')"
            tosed="$(echo "$line" | awk -F '  ' '{print $3}')"
            sed_opt "$togrep" "$tosed" "$file" || {
                echo "$line" | awk -F '  ' '{print $NF}' | sh
            }
        fi
    done
}

option_fix "$optdir"/common
option_fix "$optdir"/"$conf"

setup-devd udev &

addgroup felix audio
addgroup felix flatpak
addgroup felix input
addgroup felix kvm
addgroup felix lp
addgroup felix seat
addgroup felix video
addgroup felix wheel

flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo &

. "$rundir"/common
. "$rundir"/"$conf"

echo "Done!"
