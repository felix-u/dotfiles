#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# wallpaper
exec ~/.config/bspwm/scripts/randwall.sh ~/dotfiles/Pictures/cafe-walls &

# compositing
#picom &

# notifications and bar
pkill dunst
dunst &
killall -q polybar
polybar hcbar &

# network and bluetooth applets
nm-applet &
blueman-applet &

# keyring shenanigans
eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
export SSH_AUTH_SOCK
source /etc/X11/xinit/xinitrc.d/50-systemd-user.sh

# cursor
xsetroot -cursor_name left_ptr &
unclutter --hide-on-touch &

# polkit
polkit-dumb-agent &

# remove all existing keybindings
hc keyunbind --all

# default layout
hc set default_frame_layout 3

# keybindings
Mod=Mod4   # Use the super key as the main modifier
Alt=Mod1
term=alacritty

hc keybind $Mod-$Alt-q quit
hc keybind $Mod-$Alt-r reload
hc keybind $Mod-w close
hc keybind $Mod-Return spawn "${TERMINAL:-$term}" # use your $TERMINAL with xterm as fallback

# app bindings
hc keybind $Mod-d spawn rofi -show drun
hc keybind $Mod-Shift-e spawn rofi -show emoji
hc keybind $Mod-d spawn rofi -show drun
hc keybind $Mod-e spawn $term -e 'ranger' 
hc keybind $Mod-a spawn thunar
hc keybind $Mod-Shift-b spawn ~/.config/bspwm/scripts/randwall.sh ~/dotfiles/Pictures/cafe-walls &
hc keybind $Mod-b spawn firefox
hc keybind $Mod-z spawn zathura

hc keybind $Mod-Shift-s spawn sh -c "maim -s -u | xclip -selection clipboard -t image/png -i && notify-send 'Screenshot saved to clipboard'"
hc keybind $Mod-Ctrl-s spawn sh -c "maim -u | xclip -selection clipboard -t image/png -i && notify-send 'Fullscreen screenshot saved to clipboard'"
hc keybind $Mod-Shift-Ctrl-s spawn sh -c "maim -u ~/Pictures/screenshots/$(date +%s).png && notify-send 'Fullscreen screenshot saved to ~/Pictures/screenshots'"
hc keybind $Mod-Shift-a spawn sh -c "maim -s -u ~/Pictures/screenshots/$(date +%s).png && notify-send 'Screenshot saved to ~/Pictures/screenshots'"
hc keybind $Mod-Ctrl-a spawn sh -c "flameshot gui"

hc keybind XF86AudioRaiseVolume spawn pulsemixer --change-volume +10
hc keybind XF86AudioLowerVolume spawn pulsemixer --change-volume -10
hc keybind XF86MonBrightnessUp spawn brightnessctl set +5%
hc keybind XF86MonBrightnessDown spawn brightnessctl set 5%-

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-$Alt-h       resize left +$resizestep
hc keybind $Mod-$Alt-j       resize down +$resizestep
hc keybind $Mod-$Alt-k       resize up +$resizestep
hc keybind $Mod-$Alt-l       resize right +$resizestep
hc keybind $Mod-$Alt-Left    resize left +$resizestep
hc keybind $Mod-$Alt-Down    resize down +$resizestep
hc keybind $Mod-$Alt-Up      resize up +$resizestep
hc keybind $Mod-$Alt-Right   resize right +$resizestep

# tags
tag_names=( {1..6} )
tag_keys=( {1..6} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

hc set_layout 3

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-Shift-w close_and_remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-n set_attr clients.focus.minimized true
# restore all minimized windows of the focused tag
hc keybind $Mod-Shift-n foreach CLIENT clients. \
     sprintf MINATT "%c.minimized" CLIENT \
     sprintf TAGATT "%c.tag" CLIENT and \
       , compare MINATT "=" "true" \
       , substitute FOCUS "tags.focus.name" compare TAGATT "=" FOCUS \
       , set_attr MINATT false
hc keybind $Mod-Shift-t pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#6085a9'
hc set frame_border_normal_color '#342e38'
hc set frame_bg_normal_color '#342e38'
hc set frame_bg_active_color '#6085a9'
hc set frame_border_width 6
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 19

hc attr theme.title_height 0
hc attr theme.title_font 'Ubuntu:pixelsize=36'  # example using Xft
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.padding_top 0  # space below the title's baseline (i.e. text depth)
hc attr theme.active.color '#6085a9'
hc attr theme.normal.color '#342e38'
hc attr theme.urgent.color '#c7525d'
hc attr theme.inner_width 6
hc attr theme.inner_color '#342e38'
hc attr theme.border_width 6
hc attr theme.floating.border_width 6
hc attr theme.floating.outer_width 6
hc attr theme.floating.outer_color '#342e38'
hc attr theme.active.inner_color '#6085a9'
hc attr theme.active.outer_color '#6085a9'
hc attr theme.background_color '#1f1c21'

hc set window_gap 19
hc set frame_padding 0
hc set smart_window_surroundings on
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
hc set_monitors 3840x2400+0+0
# or simply:
# hc detect_monitors

sleep 0.4
polybar tray1 &
